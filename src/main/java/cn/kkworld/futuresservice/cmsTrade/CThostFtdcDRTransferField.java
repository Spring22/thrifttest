/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.kkworld.futuresservice.cmsTrade;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CThostFtdcDRTransferField implements org.apache.thrift.TBase<CThostFtdcDRTransferField, CThostFtdcDRTransferField._Fields>, java.io.Serializable, Cloneable, Comparable<CThostFtdcDRTransferField> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CThostFtdcDRTransferField");

  private static final org.apache.thrift.protocol.TField ORIG_DRIDENTITY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("origDRIdentityID", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DEST_DRIDENTITY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("destDRIdentityID", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ORIG_BROKER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("origBrokerID", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DEST_BROKER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("destBrokerID", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CThostFtdcDRTransferFieldStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CThostFtdcDRTransferFieldTupleSchemeFactory());
  }

  public int origDRIdentityID; // required
  public int destDRIdentityID; // required
  public String origBrokerID; // required
  public String destBrokerID; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORIG_DRIDENTITY_ID((short)1, "origDRIdentityID"),
    DEST_DRIDENTITY_ID((short)2, "destDRIdentityID"),
    ORIG_BROKER_ID((short)3, "origBrokerID"),
    DEST_BROKER_ID((short)4, "destBrokerID");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORIG_DRIDENTITY_ID
          return ORIG_DRIDENTITY_ID;
        case 2: // DEST_DRIDENTITY_ID
          return DEST_DRIDENTITY_ID;
        case 3: // ORIG_BROKER_ID
          return ORIG_BROKER_ID;
        case 4: // DEST_BROKER_ID
          return DEST_BROKER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ORIGDRIDENTITYID_ISSET_ID = 0;
  private static final int __DESTDRIDENTITYID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORIG_DRIDENTITY_ID, new org.apache.thrift.meta_data.FieldMetaData("origDRIdentityID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TThostFtdcDRIdentityIDType")));
    tmpMap.put(_Fields.DEST_DRIDENTITY_ID, new org.apache.thrift.meta_data.FieldMetaData("destDRIdentityID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TThostFtdcDRIdentityIDType")));
    tmpMap.put(_Fields.ORIG_BROKER_ID, new org.apache.thrift.meta_data.FieldMetaData("origBrokerID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "TThostFtdcBrokerIDType")));
    tmpMap.put(_Fields.DEST_BROKER_ID, new org.apache.thrift.meta_data.FieldMetaData("destBrokerID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "TThostFtdcBrokerIDType")));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CThostFtdcDRTransferField.class, metaDataMap);
  }

  public CThostFtdcDRTransferField() {
  }

  public CThostFtdcDRTransferField(
    int origDRIdentityID,
    int destDRIdentityID,
    String origBrokerID,
    String destBrokerID)
  {
    this();
    this.origDRIdentityID = origDRIdentityID;
    setOrigDRIdentityIDIsSet(true);
    this.destDRIdentityID = destDRIdentityID;
    setDestDRIdentityIDIsSet(true);
    this.origBrokerID = origBrokerID;
    this.destBrokerID = destBrokerID;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CThostFtdcDRTransferField(CThostFtdcDRTransferField other) {
    __isset_bitfield = other.__isset_bitfield;
    this.origDRIdentityID = other.origDRIdentityID;
    this.destDRIdentityID = other.destDRIdentityID;
    if (other.isSetOrigBrokerID()) {
      this.origBrokerID = other.origBrokerID;
    }
    if (other.isSetDestBrokerID()) {
      this.destBrokerID = other.destBrokerID;
    }
  }

  public CThostFtdcDRTransferField deepCopy() {
    return new CThostFtdcDRTransferField(this);
  }

  @Override
  public void clear() {
    setOrigDRIdentityIDIsSet(false);
    this.origDRIdentityID = 0;
    setDestDRIdentityIDIsSet(false);
    this.destDRIdentityID = 0;
    this.origBrokerID = null;
    this.destBrokerID = null;
  }

  public int getOrigDRIdentityID() {
    return this.origDRIdentityID;
  }

  public CThostFtdcDRTransferField setOrigDRIdentityID(int origDRIdentityID) {
    this.origDRIdentityID = origDRIdentityID;
    setOrigDRIdentityIDIsSet(true);
    return this;
  }

  public void unsetOrigDRIdentityID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORIGDRIDENTITYID_ISSET_ID);
  }

  /** Returns true if field origDRIdentityID is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigDRIdentityID() {
    return EncodingUtils.testBit(__isset_bitfield, __ORIGDRIDENTITYID_ISSET_ID);
  }

  public void setOrigDRIdentityIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORIGDRIDENTITYID_ISSET_ID, value);
  }

  public int getDestDRIdentityID() {
    return this.destDRIdentityID;
  }

  public CThostFtdcDRTransferField setDestDRIdentityID(int destDRIdentityID) {
    this.destDRIdentityID = destDRIdentityID;
    setDestDRIdentityIDIsSet(true);
    return this;
  }

  public void unsetDestDRIdentityID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESTDRIDENTITYID_ISSET_ID);
  }

  /** Returns true if field destDRIdentityID is set (has been assigned a value) and false otherwise */
  public boolean isSetDestDRIdentityID() {
    return EncodingUtils.testBit(__isset_bitfield, __DESTDRIDENTITYID_ISSET_ID);
  }

  public void setDestDRIdentityIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESTDRIDENTITYID_ISSET_ID, value);
  }

  public String getOrigBrokerID() {
    return this.origBrokerID;
  }

  public CThostFtdcDRTransferField setOrigBrokerID(String origBrokerID) {
    this.origBrokerID = origBrokerID;
    return this;
  }

  public void unsetOrigBrokerID() {
    this.origBrokerID = null;
  }

  /** Returns true if field origBrokerID is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigBrokerID() {
    return this.origBrokerID != null;
  }

  public void setOrigBrokerIDIsSet(boolean value) {
    if (!value) {
      this.origBrokerID = null;
    }
  }

  public String getDestBrokerID() {
    return this.destBrokerID;
  }

  public CThostFtdcDRTransferField setDestBrokerID(String destBrokerID) {
    this.destBrokerID = destBrokerID;
    return this;
  }

  public void unsetDestBrokerID() {
    this.destBrokerID = null;
  }

  /** Returns true if field destBrokerID is set (has been assigned a value) and false otherwise */
  public boolean isSetDestBrokerID() {
    return this.destBrokerID != null;
  }

  public void setDestBrokerIDIsSet(boolean value) {
    if (!value) {
      this.destBrokerID = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORIG_DRIDENTITY_ID:
      if (value == null) {
        unsetOrigDRIdentityID();
      } else {
        setOrigDRIdentityID((Integer)value);
      }
      break;

    case DEST_DRIDENTITY_ID:
      if (value == null) {
        unsetDestDRIdentityID();
      } else {
        setDestDRIdentityID((Integer)value);
      }
      break;

    case ORIG_BROKER_ID:
      if (value == null) {
        unsetOrigBrokerID();
      } else {
        setOrigBrokerID((String)value);
      }
      break;

    case DEST_BROKER_ID:
      if (value == null) {
        unsetDestBrokerID();
      } else {
        setDestBrokerID((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORIG_DRIDENTITY_ID:
      return Integer.valueOf(getOrigDRIdentityID());

    case DEST_DRIDENTITY_ID:
      return Integer.valueOf(getDestDRIdentityID());

    case ORIG_BROKER_ID:
      return getOrigBrokerID();

    case DEST_BROKER_ID:
      return getDestBrokerID();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORIG_DRIDENTITY_ID:
      return isSetOrigDRIdentityID();
    case DEST_DRIDENTITY_ID:
      return isSetDestDRIdentityID();
    case ORIG_BROKER_ID:
      return isSetOrigBrokerID();
    case DEST_BROKER_ID:
      return isSetDestBrokerID();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CThostFtdcDRTransferField)
      return this.equals((CThostFtdcDRTransferField)that);
    return false;
  }

  public boolean equals(CThostFtdcDRTransferField that) {
    if (that == null)
      return false;

    boolean this_present_origDRIdentityID = true;
    boolean that_present_origDRIdentityID = true;
    if (this_present_origDRIdentityID || that_present_origDRIdentityID) {
      if (!(this_present_origDRIdentityID && that_present_origDRIdentityID))
        return false;
      if (this.origDRIdentityID != that.origDRIdentityID)
        return false;
    }

    boolean this_present_destDRIdentityID = true;
    boolean that_present_destDRIdentityID = true;
    if (this_present_destDRIdentityID || that_present_destDRIdentityID) {
      if (!(this_present_destDRIdentityID && that_present_destDRIdentityID))
        return false;
      if (this.destDRIdentityID != that.destDRIdentityID)
        return false;
    }

    boolean this_present_origBrokerID = true && this.isSetOrigBrokerID();
    boolean that_present_origBrokerID = true && that.isSetOrigBrokerID();
    if (this_present_origBrokerID || that_present_origBrokerID) {
      if (!(this_present_origBrokerID && that_present_origBrokerID))
        return false;
      if (!this.origBrokerID.equals(that.origBrokerID))
        return false;
    }

    boolean this_present_destBrokerID = true && this.isSetDestBrokerID();
    boolean that_present_destBrokerID = true && that.isSetDestBrokerID();
    if (this_present_destBrokerID || that_present_destBrokerID) {
      if (!(this_present_destBrokerID && that_present_destBrokerID))
        return false;
      if (!this.destBrokerID.equals(that.destBrokerID))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(CThostFtdcDRTransferField other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrigDRIdentityID()).compareTo(other.isSetOrigDRIdentityID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigDRIdentityID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origDRIdentityID, other.origDRIdentityID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDestDRIdentityID()).compareTo(other.isSetDestDRIdentityID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDestDRIdentityID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.destDRIdentityID, other.destDRIdentityID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrigBrokerID()).compareTo(other.isSetOrigBrokerID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigBrokerID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origBrokerID, other.origBrokerID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDestBrokerID()).compareTo(other.isSetDestBrokerID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDestBrokerID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.destBrokerID, other.destBrokerID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CThostFtdcDRTransferField(");
    boolean first = true;

    sb.append("origDRIdentityID:");
    sb.append(this.origDRIdentityID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("destDRIdentityID:");
    sb.append(this.destDRIdentityID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("origBrokerID:");
    if (this.origBrokerID == null) {
      sb.append("null");
    } else {
      sb.append(this.origBrokerID);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("destBrokerID:");
    if (this.destBrokerID == null) {
      sb.append("null");
    } else {
      sb.append(this.destBrokerID);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CThostFtdcDRTransferFieldStandardSchemeFactory implements SchemeFactory {
    public CThostFtdcDRTransferFieldStandardScheme getScheme() {
      return new CThostFtdcDRTransferFieldStandardScheme();
    }
  }

  private static class CThostFtdcDRTransferFieldStandardScheme extends StandardScheme<CThostFtdcDRTransferField> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CThostFtdcDRTransferField struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORIG_DRIDENTITY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.origDRIdentityID = iprot.readI32();
              struct.setOrigDRIdentityIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DEST_DRIDENTITY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.destDRIdentityID = iprot.readI32();
              struct.setDestDRIdentityIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORIG_BROKER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.origBrokerID = iprot.readString();
              struct.setOrigBrokerIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DEST_BROKER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.destBrokerID = iprot.readString();
              struct.setDestBrokerIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CThostFtdcDRTransferField struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ORIG_DRIDENTITY_ID_FIELD_DESC);
      oprot.writeI32(struct.origDRIdentityID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DEST_DRIDENTITY_ID_FIELD_DESC);
      oprot.writeI32(struct.destDRIdentityID);
      oprot.writeFieldEnd();
      if (struct.origBrokerID != null) {
        oprot.writeFieldBegin(ORIG_BROKER_ID_FIELD_DESC);
        oprot.writeString(struct.origBrokerID);
        oprot.writeFieldEnd();
      }
      if (struct.destBrokerID != null) {
        oprot.writeFieldBegin(DEST_BROKER_ID_FIELD_DESC);
        oprot.writeString(struct.destBrokerID);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CThostFtdcDRTransferFieldTupleSchemeFactory implements SchemeFactory {
    public CThostFtdcDRTransferFieldTupleScheme getScheme() {
      return new CThostFtdcDRTransferFieldTupleScheme();
    }
  }

  private static class CThostFtdcDRTransferFieldTupleScheme extends TupleScheme<CThostFtdcDRTransferField> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CThostFtdcDRTransferField struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrigDRIdentityID()) {
        optionals.set(0);
      }
      if (struct.isSetDestDRIdentityID()) {
        optionals.set(1);
      }
      if (struct.isSetOrigBrokerID()) {
        optionals.set(2);
      }
      if (struct.isSetDestBrokerID()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetOrigDRIdentityID()) {
        oprot.writeI32(struct.origDRIdentityID);
      }
      if (struct.isSetDestDRIdentityID()) {
        oprot.writeI32(struct.destDRIdentityID);
      }
      if (struct.isSetOrigBrokerID()) {
        oprot.writeString(struct.origBrokerID);
      }
      if (struct.isSetDestBrokerID()) {
        oprot.writeString(struct.destBrokerID);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CThostFtdcDRTransferField struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.origDRIdentityID = iprot.readI32();
        struct.setOrigDRIdentityIDIsSet(true);
      }
      if (incoming.get(1)) {
        struct.destDRIdentityID = iprot.readI32();
        struct.setDestDRIdentityIDIsSet(true);
      }
      if (incoming.get(2)) {
        struct.origBrokerID = iprot.readString();
        struct.setOrigBrokerIDIsSet(true);
      }
      if (incoming.get(3)) {
        struct.destBrokerID = iprot.readString();
        struct.setDestBrokerIDIsSet(true);
      }
    }
  }

}

